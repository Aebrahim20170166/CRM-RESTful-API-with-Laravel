<?php

namespace Crm\Base\Requests;

use http\Client\Response;
use Illuminate\Contracts\Validation\Validator;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Http\Exceptions\HttpResponseException;
use Illuminate\Http\JsonResponse;
use Illuminate\Validation\ValidationException;

abstract class ApiRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    abstract public function authorize(): bool;

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    abstract public function rules(): array;

    protected function failedValidation(Validator $validator)
    {
        //parent::failedValidation($validator); // TODO: Change the autogenerated stub
        $errors = (new ValidationException($validator))->errors();

        if ( !empty($errors)) {
            $transformedErrors = [];
            foreach ( $errors as $field => $message) {
                $transformedErrors[] = [
                    $field => $message[0]
                ];
            }
        }

        throw new HttpResponseException(
            \response()->json(
                [
                    'status' => 'error',
                    'errors' => $transformedErrors
                ],
                JsonResponse::HTTP_BAD_REQUEST
            )
        );
    }

}
